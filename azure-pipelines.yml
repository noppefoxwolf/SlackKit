# Xcode
# Build, test, and archive an Xcode workspace on macOS.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode

trigger:
- master

jobs:
# Builds
- job: macOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'macosx'
      configuration: 'Release'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
  - task: Xcode@5
    inputs:
      actions: 'test'
      scheme: 'SlackKitTests'
      sdk: 'macosx'
      configuration: 'Debug'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
- job: iOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'iphoneos'
      configuration: 'Release'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
  - task: Xcode@5
    inputs:
      actions: 'test'
      scheme: 'SlackKitTests'
      sdk: 'iphonesimulator'
      configuration: 'Debug'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
      destinationPlatformOption: 'custom'
      destinationPlatform: 'iOS'
      destinationTypeOption: 'simulators'
      destinationSimulators: 'iPhone 11 Pro,OS=13.0'

- job: tvOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - task: Xcode@5
    inputs:
      actions: 'build'
      scheme: 'SlackKit'
      sdk: 'appletvos'
      configuration: 'Release'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
  - task: Xcode@5
    inputs:
      actions: 'test'
      scheme: 'SlackKitTests'
      sdk: 'appletvsimulator'
      configuration: 'Debug'
      xcWorkspacePath: 'SlackKit.xcodeproj/project.xcworkspace'
      xcodeVersion: '11'
      destinationPlatformOption: 'custom'
      destinationPlatform: 'tvOS'
      destinationTypeOption: 'simulators'
      destinationSimulators: 'Apple TV 4K,OS=13.0'
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: |
      # Install Swift dependencies
      sudo apt-get install clang libicu-dev
      # Install Swift 5.1
      curl https://swift.org/builds/swift-5.1-release/ubuntu1604/swift-5.1-RELEASE/swift-5.1-RELEASE-ubuntu16.04.tar.gz > $(Build.SourcesDirectory)/swift-5.1-RELEASE-ubuntu16.04.tar.gz
      tar xzf swift-5.1-RELEASE-ubuntu16.04.tar.gz -C $(Build.SourcesDirectory)
      # Swift build
      $(Build.SourcesDirectory)/swift-5.1-RELEASE-ubuntu16.04/usr/bin/swift build
      # Swift test
      $(Build.SourcesDirectory)/swift-5.1-RELEASE-ubuntu16.04/usr/bin/swift test


